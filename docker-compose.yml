services:
  app:
    container_name: app

    profiles:
      - production
      - development

    restart: always
    build:
      dockerfile: ./app/Dockerfile
      # NOTE: Give access to other service folders
      context: ./
      args:
        ENVIRONMENT: ${ENVIRONMENT}
        PORT: ${APP_PORT}
        NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
        GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}

    ports:
      - ${APP_PORT}:${APP_PORT}

  api:
    container_name: api

    profiles:
      - production
      - development

    restart: always
    build:
      dockerfile: ./api/Dockerfile
      # NOTE: Give access to other service folders
      context: ./
      args:
        ENVIRONMENT: ${ENVIRONMENT}
        PORT: ${API_PORT}
        CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
        CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}

    ports:
      - "${API_PORT}:${API_PORT}"

    volumes:
      - ./api/prisma:/gatherzap/api/prisma

  db:
    container_name: db

    profiles:
      - production
      - development

    restart: always
    build:
      dockerfile: ./Dockerfile
      context: ./db
      args:
        PORT: 5432
        PASSWORD: ${DATABASE_PASSWORD}
        DATABASE_NAME: ${DATABASE_NAME}

    volumes:
      - ./db/volumes/data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin

    profiles:
      - production
      - development

    restart: always
    build:
      dockerfile: ./Dockerfile
      context: ./pgadmin
      args:
        PORT: ${PGADMIN_PORT}
        ADMIN_EMAIL: ${ADMIN_EMAIL}
        ADMIN_PASSWORD: ${ADMIN_PASSWORD}

    ports:
      - ${PGADMIN_PORT}:${PGADMIN_PORT}
    volumes:
      - ./pgadmin/volumes/data:/var/lib/pgadmin
